spéc LISTE_ARETES étend ARC_PONDERE
	sorte listeAretes
	
Opérations:
	listeNouv: -> listeAretes // cree une liste vide
	adjElt: listeAretes, arcp -> listeAretes // ajoute une arete à la liste
	supElt: listeAretes, arcp -> listeAretes // recherche la première occurence de l'arete dans la liste et la supprime
	tailleListe: listeAretes -> Nat // renvoie la taille de la liste
	tete: listeAretes -> arete	// renvoie la tete de la liste
	estVide: listeAretes -> Bool // détermine si la liste est vide ou non
	echArete: listeAretes, arcp, arcp -> echange deux aretes de la liste
		
Pré-conditions:

Axiomes:
	supElt(listeNouv(),a)=listeNouv()
	supElt(adjElt(l,a0),a1)=
		si a0==a1 alors l
		sinon supElt(l,a1) fin_si$*
	tailleListe(listeNouv())=0
	tailleListe(adjElt(l,a0))=1+tailleListe(l)
	tete(listeNouv())=listeNouv()
	tete(adjElt(l,x))=
		si l≠listeNouv() tete(l)
		sinon x
	estVide(listeNouv())=vrai
	estVide(adjElt(l,a))=faux
	
	echArete(listeNouv(),a1,a2)=listeNouv()
	echArete(adjElt(l,a0),a1,a2)=
		si a1==a2 alors 
			si a1==a0 alors adjElt(l,a0)
			sinon adjElt(adjElt(l,a1),a0) fin_si
		sinon
			adjElt(echArete(l,a1,a2),a0) fin_si
			
fin_spéc
